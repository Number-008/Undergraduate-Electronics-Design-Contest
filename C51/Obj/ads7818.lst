C51 COMPILER V9.01   ADS7818                                                               03/22/2014 23:50:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ADS7818
OBJECT MODULE PLACED IN ..\Obj\ads7818.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Source\ADS7818\ads7818.c BROWSE INCDIR(..\Source\DELAY;..\Source\KEY;..\
                    -Source\LCD;..\Source\AD9851;..\Source\ADS7818) DEBUG OBJECTEXTEND PRINT(..\Obj\ads7818.lst) OBJECT(..\Obj\ads7818.obj)

line level    source

   1          #include"ads7818.h"
   2          #include"lcd.h" 
   3          #include<intrins.h>//   _nop_(); 
   4          #include"ad9851.h"
   5          #include"math.h"
   6          #include"key.h"
   7          #include"delay.h"
   8          //ADS7818 SPI驱动程序
   9          u16 Read_ADS7818(void)
  10          {
  11   1              u8 i;
  12   1              u16 ADS7818=0;
  13   1              CONV=0;
  14   1              _nop_();
  15   1              _nop_();
  16   1              CLK=0;
  17   1              CLK=1;
  18   1              CLK=0;
  19   1              CLK=1;
  20   1              for(i=0;i<12;i++)
  21   1              {       
  22   2                      CLK=0;//上升沿有效         
  23   2                      CLK=1; 
  24   2                      ADS7818<<=1; 
  25   2                      ADS7818|=DATA;   
  26   2              }
  27   1              CLK=0;
  28   1              CLK=1;
  29   1              CLK=0;
  30   1              CLK=1;
  31   1              CLK=0;//不可少！
  32   1              _nop_();
  33   1              _nop_();
  34   1              CONV=1;
  35   1              ADS7818=ADS7818 & 0x0fff;
  36   1              return (ADS7818); 
  37   1      }
  38          ////去掉最高位和最低位，然后取平均值,最后加权平均滤波
  39          #define READ_TIMES 25
  40          #define LOST_VAL 4
  41          u16  buf[READ_TIMES];
  42          double  AN0;
  43          double  AN1;
  44          u16 Filter(void)
  45          {       
  46   1              u8 i, j;
  47   1              u16 temp;
  48   1              for(i=0;i<READ_TIMES;i++)
  49   1              {                                
  50   2                      buf[i]=Read_ADS7818();
  51   2                      delay(5);           
  52   2              }                                   
  53   1              for(i=0;i<READ_TIMES-1; i++)//排序
  54   1              {
C51 COMPILER V9.01   ADS7818                                                               03/22/2014 23:50:40 PAGE 2   

  55   2                      for(j=i+1;j<READ_TIMES;j++)
  56   2                      {
  57   3                              if(buf[i]>buf[j])//升序排列
  58   3                              {
  59   4                                      temp=buf[i];
  60   4                                      buf[i]=buf[j];
  61   4                                      buf[j]=temp;
  62   4                              }
  63   3                      }
  64   2              }         
  65   1              AN0=0;
  66   1              for(i=LOST_VAL;i<READ_TIMES-LOST_VAL;i++)AN0+=buf[i];
  67   1              AN0=AN0/(READ_TIMES-2*LOST_VAL);
  68   1              AN1=0.8*AN1+0.2*AN0;
  69   1              return ((u16)AN1);
  70   1              //return ((u16)AN0);
  71   1      }
  72          
  73          
  74          //显示AD数字
  75          
  76          void printf_AD(void)
  77          {
  78   1              u16 max;
  79   1              u8 pm;
  80   1              char BUF2[8];
  81   1              double temp;
  82   1              if(k)
  83   1              {
  84   2                pm=max=0;
  85   2                for(Phase=0;Phase<31;Phase++)
  86   2                {
  87   3                      AD9851WriteData();
  88   3                      printf_Phase();
  89   3                      temp=Read_ADS7818();
  90   3                      if(max<temp)
  91   3                              {
  92   4                                      max=temp;
  93   4                                      pm=Phase;
  94   4                              }
  95   3                              delay(450);
  96   3                      }
  97   2                      k=0;
  98   2                      //Phase=pm-2;
  99   2                      Phase=pm;
 100   2                      AD9851WriteData();
 101   2                      printf_Phase();
 102   2                      printf_Fraq();
 103   2              
 104   2              }
 105   1              temp=Filter();
 106   1              //temp=Read_ADS7818();
 107   1              if(temp>=0x7f6) 
 108   1              {
 109   2                      temp=temp-0x7f6;
 110   2                      BUF2[0]=' ';
 111   2              }
 112   1              else   
 113   1              {
 114   2                      temp=0x7f6-temp;
 115   2                      BUF2[0]='-';
 116   2              }
C51 COMPILER V9.01   ADS7818                                                               03/22/2014 23:50:40 PAGE 3   

 117   1      
 118   1              switch (PGA)
 119   1              {
 120   2                      case 0:temp=981.8105399*temp;break;
 121   2                      case 1:temp=95.037469*temp;break;
 122   2                      case 2:temp=9.519789*temp;break;//9.5873799224853515625
 123   2                      case 3:temp=1.488261*temp;break;
 124   2                      default:break;
 125   2              }
 126   1              //temp=(78539.815*temp)/4096.0;  // 39269.9081625
 127   1              //temp=(39269.9075*temp)/4096.0;
 128   1              //temp=(50000*temp)/4096.0;
 129   1              if(((u32)temp%10)>=5)temp+=10;//四舍五入
 130   1              //if(temp>25000)temp+=10;//
 131   1              if(temp>=0 && temp<10000)
 132   1              {
 133   2                      BUF2[1]=' ';
 134   2                      BUF2[2]=(u32)temp/1000%10+0x30;
 135   2                      BUF2[3]=(u32)temp/100%10+0x30;
 136   2                      BUF2[4]=(u32)temp/10%10+0x30;
 137   2                      BUF2[5]='m';
 138   2                      if(BUF2[2]==0x30 && BUF2[3]==0x30)
 139   2                              BUF2[2]=BUF2[3]=' ';
 140   2                      else if (BUF2[2]==0x30)
 141   2                              BUF2[2]=' ';    
 142   2              }
 143   1              else if(temp>10000)
 144   1              {
 145   2                      BUF2[1]=(u32)temp/10000+0x30;
 146   2                      BUF2[2]='.';
 147   2                      BUF2[3]=(u32)temp/1000%10+0x30;
 148   2                      BUF2[4]=(u32)temp/100%10+0x30;
 149   2                      BUF2[5]=(u32)temp/10%10+0x30;
 150   2              }
 151   1              BUF2[6]='V';
 152   1              BUF2[7]='\0';
 153   1              LCD_ShowString(0,2,BUF2);
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1066    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     58      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
