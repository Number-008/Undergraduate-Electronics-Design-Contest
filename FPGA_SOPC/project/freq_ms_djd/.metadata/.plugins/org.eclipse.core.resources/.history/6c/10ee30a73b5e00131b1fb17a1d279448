/*
 * DJD.c
 *
 *  Created on: 2013-5-18
 *      Author: qin
 */
#include "div.h"
#include "djd.h"
#include "alt_types.h"
#include "lcd12864.h"
#include "string.h"
/********************************************************************
* 名 称：aut(double n)
* 功 能：自动切换显示单位
* 入口参数：n
* 出口参数：无
********************************************************************/
void DJDaut(double n)
{
	char d[14];

	if(n>=0.000 && n<0.001)
	{
		n=n*1000000;
		if(save_control & 0x80) sprintf(d,"%10.3fuHz",(double)n);
		else sprintf(d,"%10.6fuHz",(double)n);
	}
	else if(n>=0.001 && n<1)
	{
		n=n*1000;
		if(save_control & 0x80) sprintf(d,"%10.3fmHz",(double)n);
		else sprintf(d,"%10.6fmHz",(double)n);
	}
	else if(n>=1 && n<1000)
		{
			if(save_control & 0x80) sprintf(d,"%10.3fHz ",(double)n);
			else sprintf(d,"%10.6fHz ",(double)n);

		}
	else if(n>=1000 && n<1000000)
		{
			n=n/1000;
			if(save_control & 0x80) sprintf(d,"%10.3fKHz",(double)n);
			else sprintf(d,"%10.6fKHz",(double)n);
		}
	else if(n>=1000000)
		{
			n=n/1000000;
			if(save_control & 0x80) sprintf(d,"%10.3fMHz",(double)n);
			else sprintf(d,"%10.6fMHz",(double)n);

		}
	//d[13]='\0';
	ili9320_ShowString(107,225,110,12,12,d,YELLOW,BLACK);
	//ili9320_ShowString(107,22,110,12,12,d,BLACK,WHITE);

}

double ReadDJD(void)//返回周期值
{
	double temp;
	alt_u32 d1,d2;
	d1=ReadTest;
	d2=ReadRef;
	temp=(d1*200000000.0f)/d2;
	return(temp);
}

double cp(void)
{
	double f;
	alt_u16 i,j;
	alt_u16 temp[10];
	j=0;
	for(i=0;i<500;i++)
		if(data_in[i+6]>=TRIG_DATA && data_in[i+5]<TRIG_DATA)
		{
			if(j<10)
			{
				temp[j]=i;
				j++;
			}
		}
	if(j>2) f=(temp[j-1]-temp[1])/(j-2);
	switch(LCKDIV)
	{
		case 0:f=1250/f;break;
		case 1:f=2500/f;break;
		case 2:f=5000/f;break;
		case 3:f=12500/f;break;
		case 4:f=25000/f;break;
		case 5:f=50000/f;break;
		case 6:f=125000/f;break;
		case 7:f=250000/f;break;
		case 8:f=500000/f;break;
		case 9:f=1250000/f;break;
		case 10:f=2500000/f;break;
		case 11:f=5000000/f;break;
		case 12:f=12500000/f;break;
		case 13:f=25000000/f;break;
		case 14:f=50000000/f;break;
		default:break;
	}
	return(f);
}
